openapi: 3.0.0
paths:
  /jobs/seedv1:
    post:
      operationId: DomainController_seedV1
      parameters: []
      responses:
        '200':
          description: ''
  /jobs/{id}:
    get:
      operationId: PublicJobsController_getJobDetails
      summary: Get public job details by ID
      parameters:
        - name: id
          required: true
          in: path
          description: Job Posting ID
          schema:
            type: string
      responses:
        '200':
          description: Job details payload
      tags:
        - jobs
  /job-titles:
    get:
      operationId: JobTitleController_listAll
      parameters:
        - name: is_active
          required: true
          in: query
          schema:
            type: string
        - name: q
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /job-titles/seedv1:
    post:
      operationId: JobTitleController_seedV1
      parameters: []
      responses:
        '200':
          description: ''
  /applications:
    post:
      operationId: ApplicationController_apply
      parameters: []
      responses:
        '201':
          description: ''
  /applications/candidates/{id}:
    get:
      operationId: ApplicationController_listForCandidate
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: status
          required: true
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /applications/{id}/shortlist:
    post:
      operationId: ApplicationController_shortlist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /applications/{id}/schedule-interview:
    post:
      operationId: ApplicationController_scheduleInterview
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /applications/{id}/complete-interview:
    post:
      operationId: ApplicationController_completeInterview
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /applications/{id}/withdraw:
    post:
      operationId: ApplicationController_withdraw
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies:
    post:
      operationId: AgencyController_createAgency
      parameters: []
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}:
    get:
      operationId: AgencyController_getJobPosting
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: AgencyController_updateJobPosting
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies/{license}/analytics/applicants-by-phase:
    get:
      operationId: AgencyController_getApplicantsByPhase
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies/seedv1:
    post:
      operationId: AgencyController_seedV1
      parameters: []
      responses:
        '200':
          description: ''
  /agencies/{license}/job-postings:
    post:
      operationId: AgencyController_createJobPostingForAgency
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobPostingWithTagsDto'
      responses:
        '201':
          description: ''
    get:
      operationId: AgencyController_listAgencyJobPostings
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies/{license}/job-postings/{id}/tags:
    patch:
      operationId: AgencyController_updateJobPostingTags
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobTagsDto'
      responses:
        '200':
          description: ''
    get:
      operationId: AgencyController_getJobPostingTags
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/medical:
    post:
      operationId: AgencyController_addMedicalExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/insurance:
    post:
      operationId: AgencyController_addInsuranceExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/travel:
    post:
      operationId: AgencyController_addTravelExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/visa:
    post:
      operationId: AgencyController_addVisaExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/training:
    post:
      operationId: AgencyController_addTrainingExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/expenses/welfare:
    post:
      operationId: AgencyController_addWelfareExpense
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /agencies/{license}/job-postings/{id}/interview:
    post:
      operationId: AgencyController_createInterview
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
    get:
      operationId: AgencyController_getInterview
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: AgencyController_updateInterview
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /agencies/{license}/job-postings/{id}/cutout:
    post:
      operationId: AgencyController_uploadCutout
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
    delete:
      operationId: AgencyController_removeCutout
      parameters:
        - name: license
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: deleteFile
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /candidates:
    post:
      operationId: CandidateController_createCandidate
      summary: Create a candidate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateCreateDto'
      responses:
        '201':
          description: Candidate created
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
      tags:
        - candidates
  /candidates/{id}/jobs/{jobId}:
    get:
      operationId: CandidateController_getJobDetailsWithFitness
      summary: Get job details with candidate-specific fitness score
      parameters:
        - name: id
          required: true
          in: path
          description: Candidate ID
          schema:
            type: string
        - name: jobId
          required: true
          in: path
          description: Job Posting ID
          schema:
            type: string
      responses:
        '200':
          description: Job details with fitness_score
      tags:
        - candidates
  /candidates/{id}/job-profiles:
    post:
      operationId: CandidateController_addJobProfile
      summary: Add a job profile to candidate (e.g., preferred_titles)
      parameters:
        - name: id
          required: true
          in: path
          description: Candidate ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                profile_blob:
                  type: object
                  example:
                    preferred_titles:
                      - Welder
                      - Electrician
                label:
                  type: string
                  nullable: true
      responses:
        '201':
          description: Job profile created
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
      tags:
        - candidates
  /candidates/{id}/relevant-jobs:
    get:
      operationId: CandidateController_getRelevantJobs
      summary: List relevant jobs for a candidate (fitness_score included by default)
      parameters:
        - name: id
          required: true
          in: path
          description: Candidate ID
          schema:
            type: string
        - name: combineWith
          required: false
          in: query
          description: AND|OR combination with preferences
          schema:
            enum:
              - AND
              - OR
            type: string
        - name: useCanonicalTitles
          required: false
          in: query
          description: true|false
          schema:
            type: string
        - name: includeScore
          required: false
          in: query
          description: true|false (defaults to true)
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: string
        - name: salary_min
          required: false
          in: query
          description: Minimum salary amount
          schema:
            type: string
        - name: salary_max
          required: false
          in: query
          description: Maximum salary amount
          schema:
            type: string
        - name: salary_currency
          required: false
          in: query
          description: Salary currency code
          schema:
            type: string
        - name: salary_source
          required: false
          in: query
          description: base|converted
          schema:
            enum:
              - base
              - converted
            type: string
        - name: country
          required: false
          in: query
          description: Single or multiple (CSV/array) country filter
          schema: {}
      responses:
        '200':
          description: Paginated relevant jobs with fitness_score
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobsResponseDto'
      tags:
        - candidates
  /candidates/{id}/relevant-jobs/grouped:
    get:
      operationId: CandidateController_getRelevantJobsGrouped
      summary: Relevant jobs grouped by each preferred title (includes fitness_score)
      parameters:
        - name: id
          required: true
          in: path
          description: Candidate ID
          schema:
            type: string
        - name: combineWith
          required: false
          in: query
          schema:
            enum:
              - AND
              - OR
            type: string
        - name: useCanonicalTitles
          required: false
          in: query
          schema:
            type: string
        - name: includeScore
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: string
        - name: salary_min
          required: false
          in: query
          schema:
            type: string
        - name: salary_max
          required: false
          in: query
          schema:
            type: string
        - name: salary_currency
          required: false
          in: query
          schema:
            type: string
        - name: salary_source
          required: false
          in: query
          schema:
            enum:
              - base
              - converted
            type: string
        - name: country
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Grouped relevant jobs with fitness_score
      tags:
        - candidates
  /candidates/{id}/relevant-jobs/by-title:
    get:
      operationId: CandidateController_getRelevantJobsByTitle
      summary: >-
        Relevant jobs for one preferred title (fitness_score included by
        default)
      parameters:
        - name: id
          required: true
          in: path
          description: Candidate ID
          schema:
            type: string
        - name: title
          required: true
          in: query
          schema:
            type: string
        - name: combineWith
          required: false
          in: query
          schema:
            enum:
              - AND
              - OR
            type: string
        - name: useCanonicalTitles
          required: false
          in: query
          schema:
            type: string
        - name: includeScore
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: string
        - name: salary_min
          required: false
          in: query
          schema:
            type: string
        - name: salary_max
          required: false
          in: query
          schema:
            type: string
        - name: salary_currency
          required: false
          in: query
          schema:
            type: string
        - name: salary_source
          required: false
          in: query
          schema:
            enum:
              - base
              - converted
            type: string
        - name: country
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Paginated relevant jobs for a single title with fitness_score
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobsResponseDto'
      tags:
        - candidates
  /countries:
    get:
      operationId: CountryController_list
      parameters: []
      responses:
        '200':
          description: ''
  /countries/seedv1:
    post:
      operationId: CountryController_seedV1
      parameters: []
      responses:
        '200':
          description: ''
info:
  title: Agency Service API
  description: Public, Agency, and Candidate endpoints
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateJobPostingWithTagsDto:
      type: object
      properties: {}
    UpdateJobTagsDto:
      type: object
      properties: {}
    CoordinatesDto:
      type: object
      properties:
        lat:
          type: number
        lng:
          type: number
      required:
        - lat
        - lng
    AddressDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        coordinates:
          $ref: '#/components/schemas/CoordinatesDto'
        province:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        municipality:
          type: string
          nullable: true
        ward:
          type: string
          nullable: true
    SkillDto:
      type: object
      properties:
        title:
          type: string
        duration_months:
          type: number
          nullable: true
        years:
          type: number
          nullable: true
        documents:
          type: array
          items:
            type: string
      required:
        - title
    EducationDto:
      type: object
      properties:
        title:
          type: string
        institute:
          type: string
          nullable: true
        degree:
          type: string
          nullable: true
        document:
          type: string
          nullable: true
      required:
        - title
    CandidateCreateDto:
      type: object
      properties:
        full_name:
          type: string
        phone:
          type: string
          description: E.164 preferred
        address:
          $ref: '#/components/schemas/AddressDto'
        passport_number:
          type: string
          nullable: true
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
        education:
          type: array
          items:
            $ref: '#/components/schemas/EducationDto'
      required:
        - full_name
        - phone
    SalaryConvertedDto:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
      required:
        - amount
        - currency
    SalarySummaryDto:
      type: object
      properties:
        monthly_min:
          type: object
          nullable: true
        monthly_max:
          type: object
          nullable: true
        currency:
          type: object
          nullable: true
        converted:
          type: array
          items:
            $ref: '#/components/schemas/SalaryConvertedDto'
    AgencyLiteDto:
      type: object
      properties:
        name:
          type: string
        license_number:
          type: string
      required:
        - name
        - license_number
    EmployerLiteDto:
      type: object
      properties:
        company_name:
          type: string
        country:
          type: string
        city:
          type: object
          nullable: true
      required:
        - company_name
        - country
    CandidateJobCardDto:
      type: object
      properties:
        id:
          type: string
        posting_title:
          type: string
        country:
          type: string
        city:
          type: object
          nullable: true
        primary_titles:
          type: array
          items:
            type: string
        salary:
          $ref: '#/components/schemas/SalarySummaryDto'
        agency:
          $ref: '#/components/schemas/AgencyLiteDto'
        employer:
          $ref: '#/components/schemas/EmployerLiteDto'
        posting_date_ad:
          type: object
          nullable: true
        cutout_url:
          type: object
          nullable: true
        fitness_score:
          type: number
          description: 0–100
      required:
        - id
        - posting_title
        - country
    PaginatedJobsResponseDto:
      type: object
      properties:
        page:
          type: number
        limit:
          type: number
        total:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/CandidateJobCardDto'
      required:
        - page
        - limit
        - total
        - data